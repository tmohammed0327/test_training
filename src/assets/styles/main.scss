// @import "reset.scss";

@tailwind base;
@tailwind components;

@layer components {
  .basecontainer {
    @apply flex max-w-[1440px] flex-col px-4 sm:px-10;
  }
  .cs-w-full-l {
    @apply relative left-1/2 right-1/2 ml-[-50vw] mr-0 w-[50vw];
  }
  .cs-w-full-r {
    @apply relative left-1/2 right-1/2 ml-0 mr-[-50vw] w-[50vw];
  }
  .componentcontainer {
    @apply relative left-1/2 right-1/2 mx-[-50vw] flex w-screen flex-col items-center justify-center py-10 md:py-20;
  }
  .cs-w-full {
    @apply relative left-1/2 right-1/2 mx-[-50vw] w-screen;
  }
  .link {
    @apply underline decoration-4 underline-offset-4 transition-colors;
  }
}

@import "variables.scss";
@import "color_groups.scss";
@import "nav.scss";
@import "footer.scss";
@import "component-browser.scss";
@import "leaflet.scss";

// Required Core Stylesheet
@import "@glidejs/glide/src/assets/sass/glide.core";

// Optional Theme Stylesheet
@import "@glidejs/glide/src/assets/sass/glide.theme";

/* Globals */

@font-face {
  font-family: "fira-sansregular";
  src:
    url("/fonts/firasans-regular-webfont.woff2") format("woff2"),
    url("/fonts/firasans-regular-webfont.woff") format("woff");
  font-weight: normal;
  font-style: normal;
}

@font-face {
  font-family: "piazzolla";
  src:
    url("/fonts/Piazzolla-VariableFont_opsz,wght.woff2")
      format("woff2 supports variations"),
    url("/fonts/Piazzolla-VariableFont_opsz,wght.woff2")
      format("woff2-variations");
  font-weight: 100 1000;
}

/* * {
  outline: 1px solid #f00 !important;
}  */

/* Compositions */
.flow-half > * + * {
  margin-top: 8px;
}
.flow > * + * {
  margin-top: 16px;
}

.flow5 > * + * {
  margin-top: 5rem;
}

/* Utilities */
.visually-hidden {
  clip: rect(1px 1px 1px 1px); /* IE6, IE7 */
  clip: rect(1px, 1px, 1px, 1px);
  clip-path: inset(50%); /* browsers in the future */
  height: 1px;
  overflow: hidden;
  position: absolute;
  white-space: nowrap;
  width: 1px;
}

main > :last-child {
  flex: 1 1 0;
}

main > :last-child > :only-child {
  height: 100%;
}

body {
  font-family: var(--content-font), Lato, sans-serif;
  h1,
  h2,
  h3,
  h4,
  h5,
  h6 {
    font-family: var(--heading-font), Lato, serif;
  }
}

.cs-logoFont {
  font-family: var(--logo-font), Lato, sans-serif;
}

.cs-mainContent {
  margin-bottom: 20px;
  h2 {
    margin-top: 48px;
    font-size: 2.25rem;
    line-height: 2.5rem;
  }
  h3 {
    margin-top: 32px;
    font-size: 2rem;
    line-height: 2.25rem;
  }
  h4 {
    margin-top: 32px;
    font-size: 1.75rem;
    line-height: 2rem;
  }
  h5 {
    margin-top: 28px;
    font-size: 1.5rem;
    line-height: 2rem;
  }
  h6 {
    margin-top: 24px;
    font-size: 1.25rem;
    line-height: 1.75rem;
  }
  p {
    margin-top: 12px;
  }
  ol,
  ul {
    margin-top: 8px;
    margin-bottom: 8px;
    padding-left: 32px;
  }
  a {
    color: #5fb6e0;
    text-decoration: underline;
  }
  ul > li {
    list-style-type: circle;
  }
  ol > li {
    list-style-type: decimal;
  }
}

.toc {
  margin-bottom: 40px;
  max-width: 400px;
  li{
    margin-top: 8px;
  }
  ol {
    ol {
      padding-left: 20px;
      
    }
  }
}

 /* Low quality image placeholders in pure CSS in a single element.
  --lqip: (20-bit number) - 2^19
  :98765432109876543210:
  :aaBBccDDeeFFllAAAbbb:
  - 6 2-bit grayscale area values dividing the area in 3x2
  - 2 bits L channel of base Oklab color for full area
  - 3 bits a channel of base Oklab color for full area
  - 3 bits b channel of base Oklab color for full area */
  /* prettier-ignore */
  [style*="--lqip:"]:where([loading=lazy],[preload=none],.force-lqip) {
    --lqip-ca: mod(round(down, calc((var(--lqip) + 524288) / 262144)), 4);
    --lqip-cb: mod(round(down, calc((var(--lqip) + 524288) / 65536)), 4);
    --lqip-cc: mod(round(down, calc((var(--lqip) + 524288) / 16384)), 4);
    --lqip-cd: mod(round(down, calc((var(--lqip) + 524288) / 4096)), 4);
    --lqip-ce: mod(round(down, calc((var(--lqip) + 524288) / 1024)), 4);
    --lqip-cf: mod(round(down, calc((var(--lqip) + 524288) / 256)), 4);
    --lqip-ll: mod(round(down, calc((var(--lqip) + 524288) / 64)), 4);
    --lqip-aaa: mod(round(down, calc((var(--lqip) + 524288) / 8)), 8);
    --lqip-bbb: mod(calc(var(--lqip) + 524288), 8);

    --lqip-ca-clr: hsl(0 0% calc(var(--lqip-ca) / 3 * 100%));
    --lqip-cb-clr: hsl(0 0% calc(var(--lqip-cb) / 3 * 100%));
    --lqip-cc-clr: hsl(0 0% calc(var(--lqip-cc) / 3 * 100%));
    --lqip-cd-clr: hsl(0 0% calc(var(--lqip-cd) / 3 * 100%));
    --lqip-ce-clr: hsl(0 0% calc(var(--lqip-ce) / 3 * 100%));
    --lqip-cf-clr: hsl(0 0% calc(var(--lqip-cf) / 3 * 100%));
    --lqip-base-clr: oklab(
      calc(var(--lqip-ll) / 3 * 0.6 + 0.2)
        calc(var(--lqip-aaa) / 8 * 0.7 - 0.35)
        calc((var(--lqip-bbb) + 1) / 8 * 0.7 - 0.35)
    );

    --lqip-stop10: 2%;
    --lqip-stop20: 8%;
    --lqip-stop30: 18%;
    --lqip-stop40: 32%;
    background-blend-mode:
      hard-light, hard-light, hard-light, hard-light, hard-light, hard-light,
      overlay, overlay, overlay, overlay, overlay, overlay,
      normal;
    background-image: radial-gradient(
        50% 75% at 16.67% 25%,
        rgb(from var(--lqip-ca-clr) r g b / 50%),
        rgb(from var(--lqip-ca-clr) r g b / calc(50% - var(--lqip-stop10) / 2)) 10%,
        rgb(from var(--lqip-ca-clr) r g b / calc(50% - var(--lqip-stop20) / 2)) 20%,
        rgb(from var(--lqip-ca-clr) r g b / calc(50% - var(--lqip-stop30) / 2)) 30%,
        rgb(from var(--lqip-ca-clr) r g b / calc(50% - var(--lqip-stop40) / 2)) 40%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop40) / 2)) 60%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop30) / 2)) 70%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop20) / 2)) 80%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop10) / 2)) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 83.33% 25%,
        rgb(from var(--lqip-cc-clr) r g b / 50%),
        rgb(from var(--lqip-cc-clr) r g b / calc(50% - var(--lqip-stop10) / 2)) 10%,
        rgb(from var(--lqip-cc-clr) r g b / calc(50% - var(--lqip-stop20) / 2)) 20%,
        rgb(from var(--lqip-cc-clr) r g b / calc(50% - var(--lqip-stop30) / 2)) 30%,
        rgb(from var(--lqip-cc-clr) r g b / calc(50% - var(--lqip-stop40) / 2)) 40%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop40) / 2)) 60%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop30) / 2)) 70%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop20) / 2)) 80%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop10) / 2)) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 50% 25%,
        rgb(from var(--lqip-cb-clr) r g b / 50%),
        rgb(from var(--lqip-cb-clr) r g b / calc(50% - var(--lqip-stop10) / 2)) 10%,
        rgb(from var(--lqip-cb-clr) r g b / calc(50% - var(--lqip-stop20) / 2)) 20%,
        rgb(from var(--lqip-cb-clr) r g b / calc(50% - var(--lqip-stop30) / 2)) 30%,
        rgb(from var(--lqip-cb-clr) r g b / calc(50% - var(--lqip-stop40) / 2)) 40%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop40) / 2)) 60%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop30) / 2)) 70%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop20) / 2)) 80%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop10) / 2)) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 16.67% 75%,
        rgb(from var(--lqip-cd-clr) r g b / 50%),
        rgb(from var(--lqip-cd-clr) r g b / calc(50% - var(--lqip-stop10) / 2)) 10%,
        rgb(from var(--lqip-cd-clr) r g b / calc(50% - var(--lqip-stop20) / 2)) 20%,
        rgb(from var(--lqip-cd-clr) r g b / calc(50% - var(--lqip-stop30) / 2)) 30%,
        rgb(from var(--lqip-cd-clr) r g b / calc(50% - var(--lqip-stop40) / 2)) 40%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop40) / 2)) 60%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop30) / 2)) 70%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop20) / 2)) 80%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop10) / 2)) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 83.33% 75%,
        rgb(from var(--lqip-cf-clr) r g b / 50%),
        rgb(from var(--lqip-cf-clr) r g b / calc(50% - var(--lqip-stop10) / 2)) 10%,
        rgb(from var(--lqip-cf-clr) r g b / calc(50% - var(--lqip-stop20) / 2)) 20%,
        rgb(from var(--lqip-cf-clr) r g b / calc(50% - var(--lqip-stop30) / 2)) 30%,
        rgb(from var(--lqip-cf-clr) r g b / calc(50% - var(--lqip-stop40) / 2)) 40%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop40) / 2)) 60%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop30) / 2)) 70%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop20) / 2)) 80%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop10) / 2)) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 50% 75%,
        rgb(from var(--lqip-ce-clr) r g b / 50%),
        rgb(from var(--lqip-ce-clr) r g b / calc(50% - var(--lqip-stop10) / 2)) 10%,
        rgb(from var(--lqip-ce-clr) r g b / calc(50% - var(--lqip-stop20) / 2)) 20%,
        rgb(from var(--lqip-ce-clr) r g b / calc(50% - var(--lqip-stop30) / 2)) 30%,
        rgb(from var(--lqip-ce-clr) r g b / calc(50% - var(--lqip-stop40) / 2)) 40%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop40) / 2)) 60%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop30) / 2)) 70%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop20) / 2)) 80%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop10) / 2)) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 16.67% 25%,
        var(--lqip-ca-clr),
        rgb(from var(--lqip-ca-clr) r g b / calc(100% - var(--lqip-stop10))) 10%,
        rgb(from var(--lqip-ca-clr) r g b / calc(100% - var(--lqip-stop20))) 20%,
        rgb(from var(--lqip-ca-clr) r g b / calc(100% - var(--lqip-stop30))) 30%,
        rgb(from var(--lqip-ca-clr) r g b / calc(100% - var(--lqip-stop40))) 40%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop40))) 60%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop30))) 70%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop20))) 80%,
        rgb(from var(--lqip-ca-clr) r g b / calc(var(--lqip-stop10))) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 50% 25%,
        var(--lqip-cb-clr),
        rgb(from var(--lqip-cb-clr) r g b / calc(100% - var(--lqip-stop10))) 10%,
        rgb(from var(--lqip-cb-clr) r g b / calc(100% - var(--lqip-stop20))) 20%,
        rgb(from var(--lqip-cb-clr) r g b / calc(100% - var(--lqip-stop30))) 30%,
        rgb(from var(--lqip-cb-clr) r g b / calc(100% - var(--lqip-stop40))) 40%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop40))) 60%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop30))) 70%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop20))) 80%,
        rgb(from var(--lqip-cb-clr) r g b / calc(var(--lqip-stop10))) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 83.33% 25%,
        var(--lqip-cc-clr),
        rgb(from var(--lqip-cc-clr) r g b / calc(100% - var(--lqip-stop10))) 10%,
        rgb(from var(--lqip-cc-clr) r g b / calc(100% - var(--lqip-stop20))) 20%,
        rgb(from var(--lqip-cc-clr) r g b / calc(100% - var(--lqip-stop30))) 30%,
        rgb(from var(--lqip-cc-clr) r g b / calc(100% - var(--lqip-stop40))) 40%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop40))) 60%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop30))) 70%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop20))) 80%,
        rgb(from var(--lqip-cc-clr) r g b / calc(var(--lqip-stop10))) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 16.67% 75%,
        var(--lqip-cd-clr),
        rgb(from var(--lqip-cd-clr) r g b / calc(100% - var(--lqip-stop10))) 10%,
        rgb(from var(--lqip-cd-clr) r g b / calc(100% - var(--lqip-stop20))) 20%,
        rgb(from var(--lqip-cd-clr) r g b / calc(100% - var(--lqip-stop30))) 30%,
        rgb(from var(--lqip-cd-clr) r g b / calc(100% - var(--lqip-stop40))) 40%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop40))) 60%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop30))) 70%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop20))) 80%,
        rgb(from var(--lqip-cd-clr) r g b / calc(var(--lqip-stop10))) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 50% 75%,
        var(--lqip-ce-clr),
        rgb(from var(--lqip-ce-clr) r g b / calc(100% - var(--lqip-stop10))) 10%,
        rgb(from var(--lqip-ce-clr) r g b / calc(100% - var(--lqip-stop20))) 20%,
        rgb(from var(--lqip-ce-clr) r g b / calc(100% - var(--lqip-stop30))) 30%,
        rgb(from var(--lqip-ce-clr) r g b / calc(100% - var(--lqip-stop40))) 40%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop40))) 60%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop30))) 70%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop20))) 80%,
        rgb(from var(--lqip-ce-clr) r g b / calc(var(--lqip-stop10))) 90%,
        transparent
      ),
      radial-gradient(
        50% 75% at 83.33% 75%,
        var(--lqip-cf-clr),
        rgb(from var(--lqip-cf-clr) r g b / calc(100% - var(--lqip-stop10))) 10%,
        rgb(from var(--lqip-cf-clr) r g b / calc(100% - var(--lqip-stop20))) 20%,
        rgb(from var(--lqip-cf-clr) r g b / calc(100% - var(--lqip-stop30))) 30%,
        rgb(from var(--lqip-cf-clr) r g b / calc(100% - var(--lqip-stop40))) 40%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop40))) 60%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop30))) 70%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop20))) 80%,
        rgb(from var(--lqip-cf-clr) r g b / calc(var(--lqip-stop10))) 90%,
        transparent
      ),
      linear-gradient(0deg, var(--lqip-base-clr), var(--lqip-base-clr));
  }



@tailwind utilities;
